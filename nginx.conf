#daemon off;

error_log stderr warn;

worker_processes 1;

events { worker_connections 1024; }

http {

    keepalive_timeout 5s;

    gzip on;
    gzip_proxied any;
    gzip_types text/plain text/xml text/css
               text/comma-separated-values
               text/javascript application/javascript
               application/atom+xml application/json
               image/svg+xml;

    # List of application servers
    upstream CONTENT {
        server content:80;
    }
    upstream SEARCH {
        server sitesearch:9200;
    }

    log_format  custom  '"$request" '
        '$status $body_bytes_sent $request_time '
        '"$remote_addr" "$http_x_forwarded_for" '
        '"$http_user_agent" "$http_referer"';

    # Configuration for the server
    server {

        # Running port
        listen 8000 ssl;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;

        ssl_certificate /etc/nginx/certs/crt;
        ssl_certificate_key /etc/nginx/certs/key;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # If they come here using HTTP, bounce them to the correct scheme
        error_page 497 https://$host$request_uri;

        proxy_set_header Host       $http_host;   # required for docker client's sake
        proxy_set_header X-Real-IP  $remote_addr; # pass on real client's IP
        proxy_set_header Authorization "";

        access_log  /dev/stdout  custom;

        client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads

        # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)
        chunked_transfer_encoding on;

        # Redirects template
        #rewrite   ^/install$  /new-path/  permanent;
        rewrite   ^/basics/kubernetes-fundamentals/$  /basics/kubernetes-resources/  permanent;

        location /robots.txt {
            root /www;
        }

        # diagnostic ElasticSearch URLs
        location /api/search/health {
            auth_basic "Status Monitoring";
            auth_basic_user_file /etc/nginx/htpasswd_admin;
            proxy_pass http://SEARCH/_cluster/health;
            limit_except GET {
                deny all;
            }
        }
        location /api/search/stats {
            auth_basic "Status Monitoring";
            auth_basic_user_file /etc/nginx/htpasswd_admin;
            proxy_pass http://SEARCH/docs/_stats;
            limit_except GET {
                deny all;
            }
        }
        location /api/search/status {
            auth_basic "Status Monitoring";
            auth_basic_user_file /etc/nginx/htpasswd_admin;
            proxy_pass http://SEARCH/docs/_status;
            limit_except GET {
                deny all;
            }
        }

        # proxy for search queries
        location /api/search {
            proxy_pass http://SEARCH/docs/_search;
            limit_except GET POST {
                deny all;
            }
        }

        # Expires headers for static resources
        location /img {
            expires 1d;
            proxy_pass http://CONTENT;
        }
        location /js {
            expires 100d;
            proxy_pass http://CONTENT;
        }
        location /fonts {
            expires 100d;
            proxy_pass http://CONTENT;
        }
        location /css {
            expires 100d;
            proxy_pass http://CONTENT;
        }

        location /_error {
            root /www;
            internal;
        }

        location / {
            proxy_pass http://CONTENT;
            # Error pages
            proxy_intercept_errors on;
            error_page 403 /_error/403.html;
            error_page 404 /_error/404.html;
            error_page 500 502 503 504 /_error/50x.html;
        }
    }
}
